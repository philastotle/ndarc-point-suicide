geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red", "grey")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red", "black")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
tmp <- na.omit(suicide_thoughts_df)
ggplotly(
ggplot(data = tmp, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
tmp <- na.omit(suicide_thoughts_df)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
suicide_thoughts_df <- na.omit(suicide_thoughts_df)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
?vars
ggplotly(
ggplot(data = core, aes(x = bmicat, fill = bmicat)) +
ggtitle("Bodyweight category by gender") +
labs(x = "Bodyweight category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=0, vjust=0.5, size=5))
)
ggplot(data = core, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
levels(core$MarritalStatus)
# Libs
library(data.table)
library(ggplot2)
library(ggrepel)
library(plotly)
library(ROCR)
library(MASS)
library(randomForest)
# load data
baseline <- read.csv("../data/t1_beta.csv", na.strings = c("Not Applicable", "Refuse to Answer", "Don't Know", " ", ""))
suicide_thoughts_df <- subset(baseline, Suicide_Thoughts_12m == "Yes")
core <- read.csv("../data/core_labels.csv", na.strings = c("Not Applicable", "Refuse to Answer", "Don't Know", " ", ""))
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Employ, fill = Suicide_Attempt_12M)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=8))
)
ggplot(data = suicide_thoughts_df, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplot(data = core, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
core$MarritalStatus[core$MarritalStatus == "NA"]<- NA
ggplot(data = core, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplot(data = core, aes(x = !is.na(MarritalStatus), fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplot(data = core, aes(x = !is.na(MarritalStatus)), fill = MarritalStatus)) +
data = subset(core, !is.na(MarritalStatus))
ggplot(data = data, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
data = subset(core, Suicide_Thoughts_12m == "Yes")
data = subset(data, !is.na(MarritalStatus))
ggplot(data = data, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("Employment category by sex") +
labs(x = "Employment category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
data = subset(core, Suicide_Thoughts_12m == "Yes")
data = subset(data, !is.na(MarritalStatus))
ggplot(data = data, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("MarritalStatus by Wave") +
labs(x = "Status category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplot(data = suicide_thoughts_df, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("MarritalStatus by Wave") +
labs(x = "Status category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
# By wave
data = subset(core, Suicide_Thoughts_12m == "Yes")
data = subset(data, !is.na(MarritalStatus))
ggplot(data = data, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("MarritalStatus by Wave") +
labs(x = "Status category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplot(data = suicide_thoughts_df, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("MarritalStatus by Sex") +
labs(x = "Status category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
# By wave
data = subset(core, Suicide_Thoughts_12m == "Yes")
data = subset(data, !is.na(MarritalStatus))
ggplot(data = data, aes(x = MarritalStatus, fill = MarritalStatus)) +
ggtitle("MarritalStatus by Wave") +
labs(x = "Status category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Live_Count, fill = Live_Count)) +
ggtitle("Number of co-habitants") +
labs(x = "Count", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex)
)
# by year
ggplotly(
ggplot(data = data, aes(x = Live_Count, fill = Live_Count)) +
ggtitle("Number of co-habitants") +
labs(x = "Count", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~wave)
)
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = Live_Count, fill = Live_Count)) +
ggtitle("Number of co-habitants") +
labs(x = "Count", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex)
)
# BPI_Score
# number of chronic conditions
# Washington group
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = BPI_PScore, fill = BPI_PScore)) +
ggtitle("Employment + AttemptSuicide") +
labs(x = "Number of friends", y = "Share of respondents") +
geom_histogram() +  facet_grid(.~sex)
)
# BPI_PScore_five
ggplot(data = suicide_thoughts_df, aes(x = BPI_PScore_five, fill = BPI_PScore_five)) +
ggtitle("Education Attainment by sex") +
labs(x = "Education category", y = "Number of respondents") +
geom_bar(alpha = 0.7
, position="identity"
, col = 'black') +
facet_grid(.~sex) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7))
# BPI_interference
ggplotly(
ggplot(data = data, aes(x = BPI_interference, fill = sex)) +
ggtitle("BPI_interference") +
labs(x = "Age", y = "Number of respondents") +
geom_histogram(bins = 1
, alpha = 0.7
, binwidth = 1
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) +
scale_x_continuous(breaks=seq(0 , 10, 1)) +
scale_y_continuous(breaks=seq(0 , 10, 2 )) + face_grid(~.wave)
)
# BPI_interference
ggplotly(
ggplot(data = data, aes(x = BPI_interference, fill = sex)) +
ggtitle("BPI_interference") +
labs(x = "Age", y = "Number of respondents") +
geom_histogram(bins = 1
, alpha = 0.7
, binwidth = 1
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) +
scale_x_continuous(breaks=seq(0 , 10, 1)) +
scale_y_continuous(breaks=seq(0 , 10, 2 )) + facet_grid(~.wave)
)
# BPI_interference
ggplotly(
ggplot(data = data, aes(x = BPI_interference, fill = sex)) +
ggtitle("BPI_interference") +
labs(x = "Age", y = "Number of respondents") +
geom_histogram(bins = 1
, alpha = 0.7
, binwidth = 1
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) +
scale_x_continuous(breaks=seq(0 , 10, 1)) +
scale_y_continuous(breaks=seq(0 , 10, 2 )) + facet_grid(.~wave)
)
# BPI_interference
ggplotly(
ggplot(data = data, aes(x = BPI_interference, fill = Sex)) +
ggtitle("BPI_interference") +
labs(x = "Age", y = "Number of respondents") +
geom_histogram(bins = 1
, alpha = 0.7
, binwidth = 1
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) +
scale_x_continuous(breaks=seq(0 , 10, 1)) +
scale_y_continuous(breaks=seq(0 , 10, 2 )) + facet_grid(.~wave)
)
# BPI_interference
ggplotly(
ggplot(data = data, aes(x = BPI_interference, fill = Sex)) +
ggtitle("BPI_interference") +
labs(x = "BPI_interference", y = "Number of respondents") +
geom_histogram(bins = 1
, alpha = 0.7
, binwidth = 1
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) +
scale_x_continuous(breaks=seq(0 , 10, 1)) +
scale_y_continuous(breaks=seq(0 , 10, 2 )) + facet_grid(.~wave)
)
# PSEQ_Score
ggplotly(
ggplot(data = data, aes(x = PSEQ_Score, fill = sex)) +
ggtitle("PSEQ_Score") +
labs(x = "PSEQ_Score", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 10
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) + facet_grid(.~wave)
)
# PSEQ_Score
ggplotly(
ggplot(data = suicide_thoughts_df, aes(x = PSEQ_Score, fill = sex)) +
ggtitle("PSEQ_Score") +
labs(x = "PSEQ_Score", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 10
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue"))
)
# SLP9
ggplotly(
ggplot(data = data, aes(x = SLP9, fill = sex)) +
ggtitle("SLP9") +
labs(x = "SLP9", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 10
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) + facet_grid(.~wave)
)
# SLP9
ggplotly(
ggplot(data = data, aes(x = SLP9, fill = Sex)) +
ggtitle("SLP9") +
labs(x = "SLP9", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 10
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) + facet_grid(.~wave)
)
# ORBIT
ggplotly(
ggplot(data = data, aes(x = ORBIT_cont, fill = sex)) +
ggtitle("ORBIT") +
labs(x = "ORBIT", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 4
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue"))
)
# ORBIT
ggplotly(
ggplot(data = data, aes(x = ORBIT_cont, fill = Sex)) +
ggtitle("ORBIT") +
labs(x = "ORBIT", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 4
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) + facet_grid(.~wave)
)
# PODS
ggplotly(
ggplot(data = data, aes(x = PODS_TOT, fill = Sex)) +
ggtitle("PODS") +
labs(x = "PODS", y = "Number of respondents") +
geom_histogram(bins = 10
, alpha = 0.7
, binwidth = 10
, col = 'black') +
scale_fill_manual(values=c("red", "sky blue")) + facet_grid(.~wave)
)
# WHO_QOL
ggplotly(
ggplot(data = data, aes(x = WHO_QOL_q1, fill = Suicide_Attempt_12M )) +
ggtitle("Quality of life") +
labs(x = "Quality of life", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) + facet_grid(.~wave)
)
# WHO_QOL
ggplotly(
ggplot(data = data, aes(x = WHO_QOL_q2, fill = Suicide_Attempt_12M )) +
ggtitle("Health satisfaction") +
labs(x = "Health satisfaction", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red"))  +
theme(axis.text.x  = element_text(angle=45, vjust=0.5, size=7)) + facet_grid(.~wave)
)
# WHO_QOL
ggplotly(
ggplot(data = data, aes(x = WHO_QOL_q1, fill = Suicide_Attempt_12M )) +
ggtitle("Quality of life") +
labs(x = "Quality of life", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red")) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7)) + facet_grid(.~wave)
)
# WHO_QOL
ggplotly(
ggplot(data = data, aes(x = WHO_QOL_q2, fill = Suicide_Attempt_12M )) +
ggtitle("Health satisfaction") +
labs(x = "Health satisfaction", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red"))  +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=7)) + facet_grid(.~wave)
)
suicide_thoughts_df$PHQ9_Mod_sev[suicide_thoughts_df$PHQ9_Mod_sev == 1 ] <- "Yes"
suicide_thoughts_df$PHQ9_Mod_sev[suicide_thoughts_df$PHQ9_Mod_sev == -0 ] <- "No"
ggplotly(
ggplot(data = data, aes(x = Live_Count, fill = PHQ9_Mod_sev )) +
ggtitle("Number of cohabitants + Moderate to Severe Depression (PHQ9)") +
labs(x = "Number of cohabitants", y = "Share of respondents") +
geom_bar(alpha = 0.7
, position="fill"
, col = 'black') +
scale_fill_manual(values=c("sky blue", "red"))
)
logistic <- glm(Suicide_Thoughts_12m ~ Acutal_age, sex, Employ, wkg, family='binomial', data = baseline)
View(baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age, sex, Employ, wkg, family='binomial', data = baseline)
baseline$wkg
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex, Employ + wkg, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex, Employ + wkg, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ ., family='binomial', data = baseline)
levels(baseline$Suicidal_Thoughts_12m)
summary((baseline$Suicidal_Thoughts_12m)
)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex, Employ + wkg, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_severity, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_severity + SIAS_cutoff, SPS_cutoff, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_severity + SIAS_cutoff + SPS_cutoff +Borderline + Current_Agoraphobia, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_Mod_sev + SIAS_cutoff + SPS_cutoff +Borderline + Current_Agoraphobia, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_severity + SIAS_cutoff + SPS_cutoff + Borderline + Current_Agoraphobia + WHO_qol_q1 + WHO_qol_q2, family='binomial', data = baseline)
logistic <- glm(Suicide_Thoughts_12m ~ Actual_age + sex + wkg + cob + indig_yn + Live_Count + GAD_severity + PHQ9_severity + SIAS_cutoff + SPS_cutoff + Borderline + Current_Agoraphobia + WHO_QOL_q1 + WHO_QOL_q2, family='binomial', data = baseline)
summary(logistic)
logistic <- glm(Suicide_Thoughts_12m ~
Actual_age +
sex +
wkg +
cob +
indig_yn +
Live_Count +
GAD_severity +
PHQ9_severity +
SIAS_cutoff +
SPS_cutoff +
Borderline +
Current_Agoraphobia +
WHO_QOL_q1 +
WHO_QOL_q2
, family='binomial', data = baseline)
summary(logistic)
library(dplyr)
library(ggplot2)
library(foreign)
library(lattice)
library("mice")
library("VIM")
df <- read.csv('data/core.csv', header=TRUE, sep=',')
